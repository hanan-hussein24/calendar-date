
version: 2.1

orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
   aws-cli: circleci/aws-cli@2.0.3

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
           when: on_fail
           command: |
               aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

# Define a job to be invoked later in a workflow.

jobs:
  # build:
  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - checkout
  #     - run:  echo Hello World

   create_infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
                aws cloudformation deploy \
                  --template-file template.yml \
                  --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                  --region us-east-1   
  #     # Fail the job intentionally to simulate an error.
  #     # Uncomment the line below if you want to fail the current step
        #- run: return 1
        - destroy_environment

    # configure_infrastructure:
    #   docker:
    #     - image: python:3.7-alpine3.11
    #   steps:
    #     - checkout
    #     - add_ssh_keys:
    #         fingerprints: ["42:43:43:fa:85:51:4c:cd:9a:42:8e:12:35:f2:5d:bb"]
    #     - run:
    #         name: Install Ansible
    #         command: |
    #           apk add --update ansible
    #     - run:
    #         name: Run Playbook and Configure server
    #         command: |
    #           ansible-playbook -i inventory main.yml


    # Exercise: Smoke Testing
  #  smoke_test:
  #     docker:
  #       - image: alpine:latest
  #     steps:
  #       - run: apk add --update curl
  #       - run:
  #           name: smoke test
  #           command: |
  #             URL="https://blog.udacity.com/"
  #             # Test if website exists
  #             if curl -s --head ${URL} 
  #             then
  #               return 0
  #             else
  #               return 1
  #             fi


  # Exercise: Smoke Testing
   smoke_test:
      docker:
       - image: amazon/aws-cli
      steps:
       - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
       - destroy_environment  

workflows:
  My_Workflow:
    jobs:
      # - build
      - create_infrastructure
      # - configure_infrastructur
      - smoke_test:
          requires: 
            - create_infrastructure